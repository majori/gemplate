package main

import (
	"bufio"
	"flag"
	"fmt"
	"io/ioutil"
	"log"
	"os"
	"strings"

	"github.com/majori/gemplate/src/parser"
	"github.com/majori/gemplate/src/parser/simplify3d"
)

type Arguments struct {
	path string
}

func parseArguments() Arguments {
	flag.Parse()

	return Arguments{
		path: flag.Arg(0),
	}
}

func getGCode(path string) *string {
	file, err := os.Open(path)
	if err != nil {
		log.Fatal(err)
	}
	defer file.Close()

	sourceRaw, _ := ioutil.ReadAll(file)
	source := string(sourceRaw)

	return &source
}

func main() {
	args := parseArguments()
	source := getGCode(args.path)

	var parser func(source *bufio.Scanner) parser.Settings
	scanner := bufio.NewScanner(strings.NewReader(*source))
	scanner.Scan()

	if strings.Contains(scanner.Text(), "G-Code generated by Simplify3D(R)") {
		parser = simplify3d.ParseSettings
	}

	if parser == nil {
		panic("Couldn't determine correct parser for the file")
	}

	settings := parser(scanner)
	fmt.Println(settings)

}
